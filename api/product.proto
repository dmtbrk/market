syntax = "proto3";

package pb;

option go_package = "./pb;pb";

service ProductService {
  rpc Find (FindRequest) returns (stream ProductReply) {}
  rpc FindOne (FindOneRequest) returns (ProductReply) {}
  rpc Create (CreateRequest) returns (ProductReply) {}
  rpc Update (UpdateRequest) returns (ProductReply) {}
  rpc Delete (DeleteRequest) returns (ProductReply) {}
}

message FindRequest {
  int64 offset = 1;
  int64 limit = 2;
  // Optional filters. `optional` forces protoc to generate pointers to distinguish not set fields.
  optional string name = 3;
  optional PriceRange priceRange = 4;
}

message PriceRange {
  optional int64 from = 1;
  optional int64 to = 2;
}

message FindOneRequest {
  string id = 1;
}

message CreateRequest {
  string name = 2;
  int64 price = 3;
}

message UpdateRequest {
  string id = 1;
  optional string name = 2;
  optional int64 price = 3;
}

message DeleteRequest {
  string id = 1;
}

message ProductReply {
  string id = 1;
  string name = 2;
  int64 price = 3;
  string seller = 4;
}
